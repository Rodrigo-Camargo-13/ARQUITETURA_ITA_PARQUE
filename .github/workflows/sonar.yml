name: sonar
on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  sonar:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      # (Opcional) gerar coberturas mÃ­nimas antes do scan
      - uses: actions/setup-dotnet@v4
        with: { dotnet-version: '8.0.x' }
      - run: |
          if ls **/*Tests.csproj 1>/dev/null 2>&1; then
            for t in $(git ls-files '**/*Tests.csproj'); do dotnet test -c Release --collect:"XPlat Code Coverage" "$t"; done
          fi

      - uses: actions/setup-java@v4
        with: { distribution: 'temurin', java-version: '17' }
      - run: |
          if ls **/pom.xml 1>/dev/null 2>&1; then
            for f in $(git ls-files '**/pom.xml'); do (cd "$(dirname "$f")" && mvn -B -DskipTests=false test || true); done
          fi

      - uses: SonarSource/sonarqube-scan-action@v2
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN:    ${{ secrets.SONAR_TOKEN }}
