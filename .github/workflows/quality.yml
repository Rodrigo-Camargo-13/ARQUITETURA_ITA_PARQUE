name: quality-gates

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read
  security-events: write

jobs:
  build-test-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ---------- .NET ----------
      - name: Setup .NET (se houver .csproj)
        if: ${{ hashFiles('**/*.csproj') != '' }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Build/Test .NET
        if: ${{ hashFiles('**/*.csproj') != '' }}
        run: |
          dotnet restore
          dotnet build -c Release --no-restore
          if ls **/*Tests.csproj 1> /dev/null 2>&1; then dotnet test -c Release --no-build; fi

      # ---------- Java ----------
      - name: Setup Java (se houver Maven)
        if: ${{ hashFiles('**/pom.xml') != '' }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build Java (Maven)
        if: ${{ hashFiles('**/pom.xml') != '' }}
        run: mvn -B -DskipTests package

      # ---------- Python ----------
      - name: Setup Python (se houver requirements.txt)
        if: ${{ hashFiles('**/requirements.txt') != '' }}
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python deps
        if: ${{ hashFiles('**/requirements.txt') != '' }}
        run: pip install -r $(git ls-files '**/requirements.txt')

      # ---------- Validação de contratos ----------
      - name: Validate OpenAPI (se houver)
        if: ${{ hashFiles('docs/apis-openapi/**/*.yaml') != '' || hashFiles('docs/apis-openapi/**/*.yml') != '' }}
        run: |
          npm i -g @redocly/cli
          redocly lint "docs/apis-openapi/**/*.{yaml,yml}"

      - name: Validate AsyncAPI (se houver)
        if: ${{ hashFiles('docs/eventos-asyncapi/**/*.yaml') != '' || hashFiles('docs/eventos-asyncapi/**/*.yml') != '' }}
        run: |
          npm i -g @asyncapi/cli
          asyncapi validate "docs/eventos-asyncapi/**/*.{yaml,yml}"

      # ---------- SAST ----------
      - name: SAST (Semgrep) — advisory
        if: ${{ hashFiles('**/*.cs','**/*.java','**/*.py','**/*.js','**/*.ts') != '' }}
        run: |
          python -m pip install --upgrade pip
          pip install semgrep
          semgrep ci --config security/semgrep/semgrep.yml --sarif --output semgrep.sarif || echo "Semgrep findings (advisory)."

      # ---------- SCA/Misconfig/Secrets ----------
      - name: SCA & Misconfig (Trivy FS) — advisory
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: 'fs'
          format: 'table'
          exit-code: '0'            # trocar para '1' quando quiser bloquear
          ignore-unfixed: true
          severity: 'HIGH,CRITICAL'
          scanners: 'vuln,secret,misconfig'
          hide-progress: true

      # ---------- SBOM ----------
      - name: SBOM (CycloneDX)
        uses: anchore/sbom-action@v0
        with:
          path: .
          format: cyclonedx-json
          output-file: sbom.cdx.json

      # ---------- Artefatos ----------
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            sbom.cdx.json
            semgrep.sarif
        if-no-files-found: ignore
